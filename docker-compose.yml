name: express-angular-nginx

services:
  mongo:
    image: mongo:6
    restart: unless-stopped
    networks:
      - app

  server:
    build: ./server
    image: express-angular-nginx-server:latest
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGO_URI=mongodb://mongo:27017/meanpoc
      - SEED_ON_START=true
    expose:
      - "3000"
    depends_on:
      mongo:
        condition: service_started
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -fsS http://localhost:3000/api/health > /dev/null"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - app

  frontend1:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        FRONTEND_INSTANCE_ID: frontend-1
        APP_NAME: MEAN POC
    image: express-angular-nginx-frontend1:latest
    expose:
      - "80"
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -fsS http://localhost/ > /dev/null"]
    networks:
      - app

  frontend2:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        FRONTEND_INSTANCE_ID: frontend-2
        APP_NAME: MEAN POC
    image: express-angular-nginx-frontend2:latest
    expose:
      - "80"
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -fsS http://localhost/ > /dev/null"]
    networks:
      - app

  edge:
    build: ./edge
    image: express-angular-nginx-edge:latest
    ports:
      - "8080:80"
    depends_on:
      server:
        condition: service_healthy
      frontend1:
        condition: service_started
      frontend2:
        condition: service_started
    networks:
      - app

networks:
  app:
    driver: bridge
